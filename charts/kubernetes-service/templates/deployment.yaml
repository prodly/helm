apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubernetes-service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubernetes-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kubernetes-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubernetes-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Values.appVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: '{{ .Values.service.customHealthCheckPath | default ( printf "%s/actuator/health" .Values.service.path) }}'
              port: {{ .Values.service.port }}
            initialDelaySeconds: 45
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: '{{ .Values.service.customHealthCheckPath | default ( printf "%s/actuator/health" .Values.service.path) }}'
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: PORT
              value: {{ .Values.service.port | quote }}
            - name: SERVER_SERVLET_CONTEXT_PATH
              value: '/{{ .Values.service.path }}'
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
        {{- if eq .Values.sqsd.enabled "true" }}
        - name: {{ .Chart.Name }}-sqsd
           securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.sqsd.repository }}:{{ .Values.sqsd.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.sqsd.pullPolicy }}
          env:
            - name: SQSD_QUEUE_NAME
              value: {{ .Values.sqsd.queueName | quote }}
            - name: SQS_QUEUE_REGION_NAME
              value: {{ .Values.sqsd.queueRegion | quote }}
            - name: SQSD_MAX_MESSAGES_PER_REQUEST
              value: {{ .Values.sqsd.maxMessagesPerRequest | quote }}
            - name: SQSD_RUN_DAEMONIZED
              value: {{ .Values.sqsd.runDaemonized | quote }}
            - name: SQSD_SLEEP_SECONDS
              value: {{ .Values.sqsd.sleepTime | quote }}
            - name: SQSD_WAIT_TIME_SECONDS
              value: {{ .Values.sqsd.waitTime | quote }}
            - name: SQSD_WORKER_HTTP_HOST
              value: http://{{ include "kubernetes-service.fullname" }}.{{ .Release.Namespace }}
            - name: SQSD_WORKER_HTTP_PATH
              value: {{ .Values.sqsd.workerHttpPath | quote }}
            - name: SQSD_WORKER_HTTP_REQUEST_CONTENT_TYPE
              value: {{ .Values.sqsd.workerContentType | quote }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
